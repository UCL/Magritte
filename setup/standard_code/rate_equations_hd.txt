/* Frederik De Ceuster - University College London & KU Leuven                                   */
/*                                                                                               */
/*-----------------------------------------------------------------------------------------------*/
/*                                                                                               */
/* rate_equations: defines the (chemical) rate equations                                         */
/*                                                                                               */
/* ( based on odes in 3D-PDR                                                                     */
/*   and the cvRobers_dns example that comes with Sundials )                                     */
/*                                                                                               */
/*-----------------------------------------------------------------------------------------------*/
/*                                                                                               */
/*-----------------------------------------------------------------------------------------------*/



#include <math.h>

#include <cvode/cvode.h>                                  /* prototypes for CVODE fcts., consts. */
#include <nvector/nvector_serial.h>                      /* serial N_Vector types, fcts., macros */
#include <cvode/cvode_dense.h>                                          /* prototype for CVDense */
#include <sundials/sundials_dense.h>                            /* definitions DlsMat DENSE_ELEM */
#include <sundials/sundials_types.h>                              /* definition of type realtype */

#include "../declarations.hpp"



/*
 * f routine. Compute function f(t,y) in dy = f(t,y).
 */



/* User-defined vector and matrix accessor macros: Ith, IJth */

#define Ith(v,i)    NV_Ith_S(v,i)                             /* Ith numbers components 0..NEQ-1 */
#define IJth(A,i,j) DENSE_ELEM(A,i,j)                         /* IJth numbers rows,cols 0..NEQ-1 */



static int f(realtype t, N_Vector y, N_Vector ydot, void *user_data)
{


  USER_DATA data = (USER_DATA) user_data;

  long gridp = data->gp;

  GRIDPOINT *gridpoint = data->gridpointer;
 
  realtype n_H = (realtype) gridpoint[gridp].density;

  realtype loss, form;


